{"ast":null,"code":"import { BaseService } from '../base-service';\nimport { RequestBuilder } from '../request-builder';\nimport { HttpResponse } from '@angular/common/http';\nimport { map, filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api-configuration\";\nimport * as i2 from \"@angular/common/http\";\nexport let PacketService = /*#__PURE__*/(() => {\n  class PacketService extends BaseService {\n    constructor(config, http) {\n      super(config, http);\n    }\n    getPackets(UserEmail) {\n      const rb = new RequestBuilder(this.rootUrl, PacketService.PacketPath + '/' + UserEmail, 'get');\n      rb.body({\n        UserEmail\n      }, 'application/json');\n      return this.http.request(rb.build({\n        responseType: 'json',\n        accept: 'application/json'\n      })).pipe(filter(r => r instanceof HttpResponse), map(r => {\n        return r.body;\n      }));\n    }\n    buyPacket(PassengerEmail, Name, ValidityMonths) {\n      const rb = new RequestBuilder(this.rootUrl, PacketService.PacketPath, 'post');\n      rb.body({\n        PassengerEmail,\n        Name,\n        ValidityMonths\n      }, 'application/json');\n      return this.http.request(rb.build({\n        responseType: 'json',\n        accept: 'application/json'\n      })).pipe(filter(r => r instanceof HttpResponse), map(r => {\n        return r.body;\n      }));\n    }\n  }\n  PacketService.PacketPath = '/api/Packet';\n  PacketService.ɵfac = function PacketService_Factory(t) {\n    return new (t || PacketService)(i0.ɵɵinject(i1.ApiConfiguration), i0.ɵɵinject(i2.HttpClient));\n  };\n  PacketService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PacketService,\n    factory: PacketService.ɵfac,\n    providedIn: 'root'\n  });\n  return PacketService;\n})();","map":null,"metadata":{},"sourceType":"module"}