{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      this.authorized = false;\n      this.authorized = sessionStorage.getItem('Authorized') === 'true';\n      const storedUser = sessionStorage.getItem('CurrentUser');\n      if (storedUser) {\n        this._currentUser = JSON.parse(storedUser);\n      }\n    }\n    isAuthorized() {\n      return this.authorized;\n    }\n    setAuthorized(value) {\n      this.authorized = value;\n      sessionStorage.setItem('Authorized', value.toString());\n    }\n    get currentUser() {\n      return this._currentUser;\n    }\n    login(Email, Password) {\n      const user = {\n        Email,\n        Password\n      };\n      return this.http.post('/api/PassengerController/login', user);\n    }\n    loginUser(user) {\n      this._currentUser = user;\n      this.setAuthorized(true);\n      sessionStorage.setItem('CurrentUser', JSON.stringify(user));\n    }\n    logoutUser() {\n      this._currentUser = undefined;\n      this.setAuthorized(false);\n      sessionStorage.removeItem('CurrentUser');\n      sessionStorage.removeItem('Authorized');\n    }\n  }\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}