<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <SpaProxyServerUrl>http://localhost:44492</SpaProxyServerUrl>
	<!--<SpaProxyServerUrl>http://4.210.213.185:80</SpaProxyServerUrl>-->
	<!--<SpaProxyServerUrl>https://skyc0nnect.com</SpaProxyServerUrl>-->
	<SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
  </PropertyGroup>

  <ItemGroup>
    <None Include="ClientApp\.angular\cache\angular-webpack\655926f49cae0d80068373001978c1c90fece563\0.pack" />
    <None Include="ClientApp\.angular\cache\angular-webpack\655926f49cae0d80068373001978c1c90fece563\1.pack" />
    <None Include="ClientApp\.angular\cache\angular-webpack\655926f49cae0d80068373001978c1c90fece563\index.pack" />
    <None Include="ClientApp\.angular\cache\angular-webpack\655926f49cae0d80068373001978c1c90fece563\index.pack.old" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="FontAwesome" Version="4.7.0" />
    <PackageReference Include="leaflet" Version="0.7.3" />
    <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="8.0.10" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
    <PackageReference Include="Serilog" Version="4.0.2" />
    <PackageReference Include="Serilog.Extensions.Hosting" Version="8.0.0" />
    <PackageReference Include="Serilog.Settings.Configuration" Version="8.0.4" />
    <PackageReference Include="Serilog.Sinks.Console" Version="6.0.0" />
    <PackageReference Include="Serilog.Sinks.File" Version="6.0.0" />
    <PackageReference Include="Serilog.Sinks.Seq" Version="8.0.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.8.1" />
  </ItemGroup>
	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<None Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<ItemGroup>
		<Folder Include="ClientApp\.angular\cache\angular-webpack\" />
		<Folder Include="ClientApp\src\app\auth\" />
	</ItemGroup>

	<ItemGroup>
	  <ProjectReference Include="..\FinalProject.Core\FinalProject.Core.csproj" />
	  <ProjectReference Include="..\FinalProject.Domain\FinalProject.Domain.csproj" />
	  <ProjectReference Include="..\FinalProject.Infrastructure\FinalProject.Infrastructure.csproj" />
	  <ProjectReference Include="..\FinalProject.Shared\FinalProject.Shared.csproj" />
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>
</Project>
